[
  {
    "Id": "541316",
    "ThreadId": "239799",
    "Html": "\r\n<p>Hello,</p>\r\n<p>you are doing really great job with this project, thanks a lot!</p>\r\n<p>I am experimenting little bit with it and using it for Mail Merging purposes and so far i have only 2 rather small issues.</p>\r\n<p>1) Would it be possible to include System Namespace by Default into the Engine or somehow add it programmatically before calling Razor.Parse()?</p>\r\n<p>For Example using template like this &quot;@String.Format(<span style=\"color:#a31515\">&quot;{0:dd.MM.yyyy}&quot;</span>, DateTime.Now)&quot; would produce erros like &quot;The name 'String' does not exist in the current context&quot; or &quot;The name 'DateTime' does not exist in the current\r\n context&quot;.</p>\r\n<p>Just right now i had an idea and got around it by rolling out my own Template Class and marking it with &quot;RequireNamespacesAttribute&quot;, would that be preferable way?</p>\r\n<p>2) Is Razor Template parsing an &quot;All or Nothing&quot; operation and if yes is there a way around it?</p>\r\n<pre><span style=\"color:blue\">string</span> template = <span style=\"color:#a31515\">&quot;Hello @Model.Name1 @Model.Name2 Welcome to Razor!&quot;</span>;<br><span style=\"color:blue\">string</span> result = Razor.Parse(template, <span style=\"color:blue\">new</span> { Name1 = <span style=\"color:#a31515\">&quot;John&quot;</span> , Name3 = <span style=\"color:#a31515\">&quot;John&quot;</span>});<br></pre>\r\n<p>This would fail completely because Property &quot;Name2&quot; doesn't exist in model. Would it be possible to force parsing anyways so it resolves all other known properties? The output would be</p>\r\n<pre><span style=\"color:#a31515\">&quot;Hello John @Model.Name2 Welcome to Razor!&quot;</span></pre>\r\n<p>Thanks and keep up the great work, can't wait for 1.2 ;)</p>\r\n<p>&nbsp;</p>\r\n",
    "PostedDate": "2010-12-28T11:26:32.06-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "541412",
    "ThreadId": "239799",
    "Html": "\r\n<p>Hi,</p>\r\n<p>We should be able to include other namespaces by default, will look to include System, System.Collections.Generic and System.Linq as the standard namespace imports for all templates. &nbsp;The next check-in will include that.</p>\r\n<p>As for your second question, its a little more difficult to do this, as the Razor parser generates a class which is then compiled. &nbsp;The compiler will fail to compile because of missing properties on your strongly typed models. &nbsp;I'm not even sure\r\n dynamic would help in this instance as you'd need to re-think how the Model is being provided I think. Will have a think :)<span style=\"white-space:pre\">\r\n</span></p>\r\n",
    "PostedDate": "2010-12-28T16:18:17.88-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "541462",
    "ThreadId": "239799",
    "Html": "\r\n<p>Antaris, Do you think we should go the route of MVC razor and just add some app/web.config section that could handle stuff like additional namespaces - in addition to a possible straight code method?</p>\r\n",
    "PostedDate": "2010-12-28T20:09:02.44-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "541575",
    "ThreadId": "239799",
    "Html": "\r\n<p>That's not a bad idea at all! In fact expanding from that, you could introduce a Configuration mechanism to pre-build and configure instances of the TemplateService for later consumption.</p>\r\n",
    "PostedDate": "2010-12-29T02:15:28.36-08:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]