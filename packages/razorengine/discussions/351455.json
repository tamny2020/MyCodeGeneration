[
  {
    "Id": "820836",
    "ThreadId": "351455",
    "Html": "<p><span>Error text:</span></p>\n<p><span>&nbsp;</span><br /> <span>System.Diagnostics.Contracts.__Cont</span><span>ractsRuntime+ContractException: Precondition failed: templateType != null</span><br /> <span>at System.Diagnostics.Contracts.__Cont</span><span>ractsRuntime.TriggerFailure(Contrac</span><span>tFailureKind kind, String message, String userMessage, String conditionText, Exception inner)</span><br /> <span>at System.Diagnostics.Contracts.__Cont</span><span>ractsRuntime.ReportFailure(Contract</span><span>FailureKind kind, String message, String conditionText, Exception inner)</span><br /> <span>at System.Diagnostics.Contracts.__Cont</span><span>ractsRuntime.Requires(Boolean condition, String message, String conditionText)</span><br /> <span>at RazorEngine.Templating.InstanceCont</span><span>ext..ctor(TypeLoader loader, Type templateType)</span><br /> <span>at RazorEngine.Templating.TemplateServ</span><span>ice.CreateInstanceContext(Type templateType)</span><br /> <span>at RazorEngine.Templating.TemplateServ</span><span>ice.CreateTemplate(Type templateType)</span><br /> <span>at RazorEngine.Templating.TemplateServ</span><span>ice.CreateTemplate(Type templateType, T model)</span><br /> <span>at RazorEngine.Templating.TemplateServ</span><span>ice.CreateTemplate(String razorTemplate, T model)</span><br /> <span>at RazorEngine.Templating.TemplateServ</span><span>ice.Parse(String razorTemplate, T model)</span><br /> <span>at System.Dynamic.UpdateDelegates.Upda</span><span>teAndExecute3&lt;T0,T1,T2,TRet&gt;(CallSi</span><span>te site, T0 arg0, T1 arg1, T2 arg2)</span><br /> <span>at TestConsoleApp.TemplateService.Pars</span><span>e(String templateFileName, Object model) in TemplateService.cs: line 28</span><br /> <span>at System.Dynamic.UpdateDelegates.Upda</span><span>teAndExecute3&lt;T0,T1,T2,TRet&gt;(CallSi</span><span>te site, T0 arg0, T1 arg1, T2 arg2)</span><br /> <span>at TestConsoleApp.Tests.UnitTest1.Test</span><span>Method2() in UnitTest1.cs: line 56</span></p>\n<p>&nbsp;</p>\n<p>The unit test to generate the error:</p>\n<div style=\"color: black; background-color: white;\">\n<pre>[TestMethod]\n<span style=\"color: blue;\">public</span> <span style=\"color: blue;\">void</span> TestMethod2()\n{\n<span style=\"color: blue;\">var</span> template = <span style=\"color: #a31515;\">\"&lt;h1&gt;This is ID @Model.Id&lt;/h1&gt;&lt;p&gt;Items count: @Model.Items.Count()&lt;/p&gt;&lt;p&gt;Regards&lt;/p&gt;\"</span>;\n<span style=\"color: blue;\">var</span> model = <span style=\"color: blue;\">new</span> Model { Id = 12, Items = <span style=\"color: blue;\">new</span> List&lt;<span style=\"color: blue;\">string</span>&gt; { <span style=\"color: #a31515;\">\"\"</span>, <span style=\"color: #a31515;\">\"\"</span>, <span style=\"color: #a31515;\">\"\"</span> } };\n<span style=\"color: blue;\">var</span> expectedResult = <span style=\"color: #a31515;\">\"&lt;h1&gt;This is ID 12&lt;/h1&gt;&lt;p&gt;Items count: 3&lt;/p&gt;&lt;p&gt;Regards&lt;/p&gt;\"</span>;\n\n<span style=\"color: blue;\">var</span> assembly = Assembly.LoadFrom(<span style=\"color: #a31515;\">@\"..\\..\\..\\TestConsoleApp\\bin\\Debug\\TestConsoleApp.dll\"</span>);\n\n<span style=\"color: blue;\">dynamic</span> builder = assembly.CreateInstance(<span style=\"color: #a31515;\">\"TestConsoleApp.TemplateService\"</span>, <span style=\"color: blue;\">true</span>, BindingFlags.Instance | BindingFlags.Public, <span style=\"color: blue;\">null</span>, <span style=\"color: blue;\">null</span>, <span style=\"color: blue;\">null</span>, <span style=\"color: blue;\">null</span>);\n\n<span style=\"color: blue;\">var</span> result = builder.Parse(template, model);\n\nAssert.AreEqual(expectedResult, result);\n}\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>The model for template:</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> Model\n    {\n        <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">int</span> Id { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>; }\n        <span style=\"color: blue;\">public</span> List&lt;<span style=\"color: blue;\">string</span>&gt; Items { <span style=\"color: blue;\">get</span>; <span style=\"color: blue;\">set</span>; }\n    }\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>Template service in TestConsoleApp:</p>\n<div style=\"color: black; background-color: white;\">\n<pre><span style=\"color: blue;\">public</span> <span style=\"color: blue;\">class</span> TemplateService\n{\n    <span style=\"color: blue;\">public</span> <span style=\"color: blue;\">string</span> Parse(<span style=\"color: blue;\">string</span> template, <span style=\"color: blue;\">dynamic</span> model)\n    {\n        <span style=\"color: blue;\">return</span> Razor.Parse(template, model);\n    }\n}\n\n</pre>\n</div>\n<p>&nbsp;</p>\n<p>Any comments are welcome!</p>",
    "PostedDate": "2012-04-06T07:44:59.027-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]