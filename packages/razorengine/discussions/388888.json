[
  {
    "Id": "890977",
    "ThreadId": "388888",
    "Html": "\r\n<p>I've been having troubles building templates that work in the RazorEngine...</p>\r\n<p>Something as simple as:</p>\r\n<div style=\"color:black; background-color:white\">\r\n<div style=\"color:black; background-color:white\">\r\n<pre>@<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; Model.AmountOfCompanies; i&#43;&#43;) {\n&lt;li&gt;&lt;a href=<span style=\"color:#a31515\">&quot;tab_@i&quot;</span>&gt;@Model.Companies[i].UniversalName&lt;/a&gt;&lt;/li&gt;\n}</pre>\r\n</div>\r\n</div>\r\n<p>Causes the RazorEngine to choke when trying to compile.</p>\r\n<p>{&quot;End of file was reached before the \\&quot;a\\&quot; tag could be parsed. &nbsp;Elements inside markup blocks must be complete. They must either be self-closing (\\&quot;&lt;br /&gt;\\&quot;) or have matching end tags (\\&quot;&lt;p&gt;Hello&lt;/p&gt;\\&quot;). &nbsp;If you intended to display\r\n a \\&quot;&lt;\\&quot; character, use the \\&quot;&amp;lt;\\&quot; HTML entity.&quot;}</p>\r\n<p>I've tried splitting up my templates into simpler parts, but more basic then the above example isn't possible.</p>\r\n<p>Is there a way to kill the HTML parsing and just replace what I feed into it?</p>\r\n<p>&nbsp;</p>\r\n<p>Even weirder:</p>\r\n<p>If I change my template to do a String.Format() like:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>@<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; Model.AmountOfCompanies; i&#43;&#43;) {\n    Raw(String.Format(<span style=\"color:#a31515\">&quot;&lt;li&gt;&lt;a href=\\&quot;tab_{0}\\&quot;&gt;{1}&lt;/a&gt;&lt;/li&gt;&quot;</span>,i, Model.Companies[i].UniversalName));\n}\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>, it will not throw a compile error, but it also doesn't produce output :( I use this in a larger template (which was split because I was trying to find a way to get this working:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;div id=<span style=\"color:#a31515\">&quot;Tabs&quot;</span> <span style=\"color:blue\">class</span>=<span style=\"color:#a31515\">&quot;tabs&quot;</span>&gt;\n@<span style=\"color:blue\">if</span> (Model.AmountOfCompanies &gt; 0) {\n    &lt;ul&gt;    \n    @Include(<span style=\"color:#a31515\">&quot;TabHeaders&quot;</span>, Model)\n    &lt;/ul&gt;\n}\n&lt;/div&gt;\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>It outputs:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">div</span> <span style=\"color:red\">id</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Tabs&quot;</span> <span style=\"color:red\">class</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tabs&quot;</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>    \n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">div</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>If I change my first template to get some more information like:&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><div style=\"color:black; background-color:white\"><pre>@<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; Model.AmountOfCompanies; i&#43;&#43;) {\n    Raw(String.Format(<span style=\"color:#a31515\">&quot;&lt;li&gt;&lt;a href=\\&quot;tab_{0}\\&quot;&gt;{1}&lt;/a&gt;&lt;/li&gt;&quot;</span>,i, Model.Companies[i].UniversalName));\n}\n&lt;p&gt;First: @Model.Companies[0].UniversalName; Available: @Model.AmountOfCompanies&lt;/p&gt;\n&lt;p&gt;Format Test: @Raw(String.Format(<span style=\"color:#a31515\">&quot;&lt;li&gt;&lt;a href=\\&quot;tab_{0}\\&quot;&gt;{1}&lt;/a&gt;&lt;/li&gt;&quot;</span>,0, Model.Companies[0].UniversalName))&lt;/p&gt;\n</pre>\n</div>\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>The output becomes:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">div</span> <span style=\"color:red\">id</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Tabs&quot;</span> <span style=\"color:red\">class</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tabs&quot;</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>    \n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>First: carl-zeiss-microscopy-gmbh; Available: 2<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">div</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Then, I tested to see if the Raw or String.Format didn't work; but those also work:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">div</span> <span style=\"color:red\">id</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Tabs&quot;</span> <span style=\"color:red\">class</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tabs&quot;</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>    \n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>First: carl-zeiss-microscopy-gmbh; Available: 2<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>Format Test: <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">a</span> <span style=\"color:red\">href</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tab_0&quot;</span><span style=\"color:blue\">&gt;</span>carl-zeiss-microscopy-gmbh<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">a</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">p</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">div</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p>So, WTF? Why is RazorEngine f-ing up in loops, and how to I fix this? If I have to hack a solution myself, the usage of the RazorEngine itself becomes more of a hassle then a relief...</p>\r\n<p>&nbsp;</p>\r\n<p>Next, I figured I'd build the HTML String, and return it later. This showed me that 'writing' html inside code doesn't work; doing it inline inside HTML does work.</p>\r\n<p>Template PoC:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre>&lt;div id=<span style=\"color:#a31515\">&quot;Tabs&quot;</span> <span style=\"color:blue\">class</span>=<span style=\"color:#a31515\">&quot;tabs&quot;</span>&gt;\n@<span style=\"color:blue\">if</span> (Model.AmountOfCompanies &gt; 0) {\n    &lt;ul&gt;    \n    @Include(<span style=\"color:#a31515\">&quot;TabHeaders&quot;</span>, Model)\n    &lt;/ul&gt;\n}\n&lt;/div&gt;\n\n&lt;!-- Returning data inside a code block DOES NOT WORK --&gt;\n@{\n\tString Items = <span style=\"color:#a31515\">&quot;&quot;</span>;\n\t<span style=\"color:blue\">for</span> (<span style=\"color:blue\">int</span> i = 0; i &lt; Model.AmountOfCompanies; i&#43;&#43;) {\n\t\t<span style=\"color:green\">// RazorEngine cannot output HTML inside loops, so collect &amp; output later.</span>\n\t\tItems &#43;= String.Format(<span style=\"color:#a31515\">&quot;\\r\\n&lt;li&gt;&lt;a href=\\&quot;tab_{0}\\&quot;&gt;{1}&lt;/a&gt;&lt;/li&gt;&quot;</span>,i, Model.Companies[i].UniversalName);\n\t}\n\t<span style=\"color:green\">// Does not work!</span>\n\tRaw(Items);\n}\n&lt;!-- Works! --&gt;@Raw(Items)\n</pre>\r\n</div>\r\n<p>&nbsp;</p>\r\n<p>Output:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color:black; background-color:white\">\r\n<pre><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">div</span> <span style=\"color:red\">id</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;Tabs&quot;</span> <span style=\"color:red\">class</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tabs&quot;</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>    \n    <span style=\"color:green\">&lt;!-- Returning data inside a code block DOES NOT WORK --&gt;</span>\n<span style=\"color:green\">&lt;!-- Works! --&gt;</span>\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">a</span> <span style=\"color:red\">href</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tab_0&quot;</span><span style=\"color:blue\">&gt;</span>carl-zeiss-microscopy-gmbh<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">a</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;</span><span style=\"color:#a31515\">a</span> <span style=\"color:red\">href</span><span style=\"color:blue\">=</span><span style=\"color:blue\">&quot;tab_1&quot;</span><span style=\"color:blue\">&gt;</span>carl-zeiss-vision<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">a</span><span style=\"color:blue\">&gt;</span><span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">li</span><span style=\"color:blue\">&gt;</span>\n    <span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">ul</span><span style=\"color:blue\">&gt;</span>\n<span style=\"color:blue\">&lt;/</span><span style=\"color:#a31515\">div</span><span style=\"color:blue\">&gt;</span>\n</pre>\r\n</div>\r\n<p>As you can tell; there isn't much left of the template... Any chance this will get fixed? If not, please point me to a similar engine that does work...</p>\r\n",
    "PostedDate": "2012-07-25T02:32:03.383-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "897072",
    "ThreadId": "388888",
    "Html": "<p>The issue you seem to be experiencing with your initial loop code is that the @ transition character needs to be followed by a <strong>explicit</strong>&nbsp;expression, i.e:</p>\r\n<p>&nbsp;</p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">li</span><span style=\"color: blue;\">&gt;</span><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">a</span> <span style=\"color: red;\">href</span><span style=\"color: blue;\">=</span><span style=\"color: blue;\">\"tab_@i\"</span><span style=\"color: blue;\">&gt;</span>@Model.Companies[i].UniversalName<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">a</span><span style=\"color: blue;\">&gt;</span><span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">li</span><span style=\"color: blue;\">&gt;</span>\r\n</pre>\r\n</div>\r\n<p>Needs to be:</p>\r\n<p>\r\n<div style=\"color: black; background-color: white;\">\r\n<pre><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">li</span><span style=\"color: blue;\">&gt;</span><span style=\"color: blue;\">&lt;</span><span style=\"color: #a31515;\">a</span> <span style=\"color: red;\">href</span><span style=\"color: blue;\">=</span><span style=\"color: blue;\">\"tab_@(i)\"</span><span style=\"color: blue;\">&gt;</span>@Model.Companies[i].UniversalName<span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">a</span><span style=\"color: blue;\">&gt;</span><span style=\"color: blue;\">&lt;/</span><span style=\"color: #a31515;\">li</span><span style=\"color: blue;\">&gt;</span><br /></pre>\r\n</div>\r\n</p>\r\n<p>In terms of using @Raw in a code block, when you use @{ ... }, the code you place here become part of the method body, which means simply calling Raw(...) inside it does nothing with Raw()'s return value.</p>\r\n<p>When you use @Raw in your template, the @Raw(...) method call return value is written to the output text writer.</p>\r\n<p>&nbsp;</p>",
    "PostedDate": "2012-08-08T09:36:17.943-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  },
  {
    "Id": "897417",
    "ThreadId": "388888",
    "Html": "<p>Thanks for your reply. While I appreciate the feedback, by now, I just switched to handlebars and compile the templates on the client side with JSON data. While I would have loved to use Razor, to be able to make the move to MVC at a later point less painfull for the huge application we have right now, the fact that the parser can't report on these issues and instead throw weird other errors, I'll just continue on the route I am right now.</p>\r\n<p>I have no idea how complex it would be to improve the parser to report on these things, but I'd love to write it myself if only I had the time :-/</p>",
    "PostedDate": "2012-08-09T01:32:20.533-07:00",
    "UserRole": null,
    "MarkedAsAnswerDate": null
  }
]